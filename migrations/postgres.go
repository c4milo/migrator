// Code generated by go-bindata.
// sources:
// migrations/postgres/0001_create-index-function-if-not-exists_down.sql
// migrations/postgres/0001_create-index-function-if-not-exists_up.sql
// migrations/postgres/0002_create-extension-citext_down.sql
// migrations/postgres/0002_create-extension-citext_up.sql
// migrations/postgres/0003_create-accounts-table_down.sql
// migrations/postgres/0003_create-accounts-table_up.sql
// migrations/postgres/0004_create-scopes-table_down.sql
// migrations/postgres/0004_create-scopes-table_up.sql
// migrations/postgres/0005_create-clients-table_down.sql
// migrations/postgres/0005_create-clients-table_up.sql
// migrations/postgres/0006_create-grants-table_down.sql
// migrations/postgres/0006_create-grants-table_up.sql
// migrations/postgres/0007_create-tokens-table_down.sql
// migrations/postgres/0007_create-tokens-table_up.sql
// DO NOT EDIT!

package migrations

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data, name string) ([]byte, error) {
	gz, err := gzip.NewReader(strings.NewReader(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var __0001_createIndexFunctionIfNotExists_downSql = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x54\xca\x41\x0a\x80\x30\x0c\x44\xd1\xab\x64\xa9\xe0\x0d\x3c\x4c\x28\x6d\x0a\x03\x9a\x6a\x3b\x42\x8e\x2f\x14\x37\x2e\x1f\xff\x97\xde\x2e\xa9\x8f\x67\xa2\xb9\xa0\x8a\x05\x06\x87\xe4\x6e\x89\xa6\xf0\x62\xa1\xa8\xea\x8d\xfa\xa5\x85\xea\xe9\x34\xa1\x05\x37\xc1\x0f\x73\x1f\xf7\x31\xbd\xee\x6f\x00\x00\x00\xff\xff\x77\x74\xd0\xd5\x5e\x00\x00\x00"

func _0001_createIndexFunctionIfNotExists_downSqlBytes() ([]byte, error) {
	return bindataRead(
		__0001_createIndexFunctionIfNotExists_downSql,
		"0001_create-index-function-if-not-exists_down.sql",
	)
}

func _0001_createIndexFunctionIfNotExists_downSql() (*asset, error) {
	bytes, err := _0001_createIndexFunctionIfNotExists_downSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "0001_create-index-function-if-not-exists_down.sql", size: 94, mode: os.FileMode(420), modTime: time.Unix(1462503451, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __0001_createIndexFunctionIfNotExists_upSql = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x5c\x51\x41\x8e\xa4\x30\x0c\xbc\xe7\x15\x75\x40\x62\x46\xda\x41\xda\x33\xe2\x2d\x28\x13\x0c\x64\x95\x76\xd8\x38\x74\xb3\x52\x3f\x7e\x15\x83\xba\x19\x4e\x8e\x5d\x65\xc7\xae\xfa\xfa\x42\x9e\xbd\x60\x5c\xd9\x65\x1f\x19\x36\x84\xf8\x10\xac\x82\x1c\xe1\x12\xd9\x4c\xf0\x3c\xd0\x46\x02\x3f\x22\xcf\xf4\x0f\x43\xe4\x3a\x83\x36\x2f\xd9\x1c\x94\x98\x90\x68\x09\xd6\xd1\x7b\xd4\x0e\xf5\xda\xdd\xfb\xb1\xe7\x98\x7b\x6d\x12\x7c\xe4\x9e\xed\x8d\x90\x69\xcb\xbf\xe0\x7f\x24\x4a\x97\xbf\x41\xf3\x4f\x24\xca\x6b\x62\xc1\x3d\xfa\x01\x56\x50\x55\x66\x20\x17\x6c\x22\x03\x8c\x6b\x08\xc7\x07\x3a\xe2\x6e\x93\x9b\x6d\x6a\x0d\x20\x6e\xa6\x9b\xbd\x94\xbf\x69\xf2\x6c\xcc\xb5\xad\xc3\xb1\xcf\xf3\x89\xba\xaf\x4b\xd8\x77\x6a\xcd\x79\x4c\x87\x7a\x59\xbf\x83\x77\x75\x6b\x8c\x1f\xc1\xf1\x50\x41\xf0\x61\x00\x40\x28\x90\xcb\xf8\xad\xc9\x98\xe2\x0d\xc0\x32\xf5\x2e\x58\x11\x38\xad\xfe\x89\x9e\xf7\x6a\x19\x29\x4b\x51\x8c\x11\x19\xdc\x94\x03\x3b\xb8\x26\x51\x78\x61\xda\xf3\x98\x29\x11\xde\x08\xba\xeb\xe1\x4a\xb3\x3c\x94\xc0\x0d\xcb\x72\xd0\x4e\xdb\x2b\xe5\xb3\x18\xc8\x46\xdf\xb4\x91\x5b\x33\xa1\x3e\xbb\x0c\x3d\xfe\xaa\x4f\x91\xa5\xec\xa8\xe0\x59\x91\x02\x34\x5a\x3d\x09\xb8\xd3\x5e\x3e\xb6\x86\x78\x80\x1f\x35\x9a\xaa\x32\xc1\xf2\xb4\xda\x89\xb0\x84\x65\x2a\x46\xdf\x63\xb0\xd9\x07\x6a\xff\x07\x00\x00\xff\xff\xf5\xe7\x82\xd2\x8e\x02\x00\x00"

func _0001_createIndexFunctionIfNotExists_upSqlBytes() ([]byte, error) {
	return bindataRead(
		__0001_createIndexFunctionIfNotExists_upSql,
		"0001_create-index-function-if-not-exists_up.sql",
	)
}

func _0001_createIndexFunctionIfNotExists_upSql() (*asset, error) {
	bytes, err := _0001_createIndexFunctionIfNotExists_upSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "0001_create-index-function-if-not-exists_up.sql", size: 654, mode: os.FileMode(420), modTime: time.Unix(1462503451, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __0002_createExtensionCitext_downSql = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd2\xd5\x55\x28\xcd\xcb\xc9\x4f\x4c\x29\x56\x48\xce\x2c\x49\xad\x28\x51\x48\xad\x28\x49\xcd\x2b\xce\xcc\xcf\xe3\x4a\x29\xca\x2f\x40\x70\x15\x32\xd3\x14\x52\x2b\x32\x8b\x4b\x60\x2a\xad\x01\x01\x00\x00\xff\xff\xf0\xc4\x1b\xe6\x3c\x00\x00\x00"

func _0002_createExtensionCitext_downSqlBytes() ([]byte, error) {
	return bindataRead(
		__0002_createExtensionCitext_downSql,
		"0002_create-extension-citext_down.sql",
	)
}

func _0002_createExtensionCitext_downSql() (*asset, error) {
	bytes, err := _0002_createExtensionCitext_downSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "0002_create-extension-citext_down.sql", size: 60, mode: os.FileMode(420), modTime: time.Unix(1462503451, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __0002_createExtensionCitext_upSql = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd2\xd5\x55\xc8\xc9\x4f\x4c\x29\x56\x48\xce\x2c\x49\xad\x28\x51\x48\xad\x28\x49\xcd\x2b\xce\xcc\xcf\xe3\x4a\x2e\x4a\x4d\x2c\x49\x45\x08\x28\x64\xa6\x29\xe4\xe5\x83\x54\x64\x16\x97\xc0\xd4\x5b\x03\x02\x00\x00\xff\xff\x0e\xa3\xe6\x8d\x40\x00\x00\x00"

func _0002_createExtensionCitext_upSqlBytes() ([]byte, error) {
	return bindataRead(
		__0002_createExtensionCitext_upSql,
		"0002_create-extension-citext_up.sql",
	)
}

func _0002_createExtensionCitext_upSql() (*asset, error) {
	bytes, err := _0002_createExtensionCitext_upSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "0002_create-extension-citext_up.sql", size: 64, mode: os.FileMode(420), modTime: time.Unix(1462503451, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __0003_createAccountsTable_downSql = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4a\x29\xca\x2f\x50\x28\x49\x4c\xca\x49\x55\xc8\x4c\x53\x48\xad\xc8\x2c\x2e\x29\x56\x48\x4c\x4e\xce\x2f\xcd\x2b\x29\xb6\xe6\x82\x48\x57\x16\x60\x91\x8d\x2f\x2e\x49\x2c\x29\x2d\x8e\x07\xc9\xe2\x57\x08\x51\x01\x08\x00\x00\xff\xff\x14\x37\xe9\x6e\x6a\x00\x00\x00"

func _0003_createAccountsTable_downSqlBytes() ([]byte, error) {
	return bindataRead(
		__0003_createAccountsTable_downSql,
		"0003_create-accounts-table_down.sql",
	)
}

func _0003_createAccountsTable_downSql() (*asset, error) {
	bytes, err := _0003_createAccountsTable_downSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "0003_create-accounts-table_down.sql", size: 106, mode: os.FileMode(420), modTime: time.Unix(1462503451, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __0003_createAccountsTable_upSql = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x54\x4d\xb2\xdb\x20\x0c\xde\xfb\x14\x9a\x6c\x92\xcc\x38\x3d\x40\xdf\xb6\x9b\x9e\xc2\xa3\x07\x72\xc2\x14\x83\x0b\x22\x4e\x7a\xfa\x0e\xc8\xb8\x69\xec\xa6\xaf\x53\x56\x58\x3f\xdf\x27\xa1\x4f\x3e\x9d\x40\x05\x42\xa6\x08\xe8\x80\x5c\x1a\x80\xef\x23\x41\xef\x03\x44\x46\x4e\xb1\x11\xbf\x98\x51\x29\x9f\x1c\x77\xe2\xea\xc4\x16\x25\xef\xb0\x77\x34\xed\x5b\xd8\x5f\x29\x98\xde\x90\xce\xf7\x98\xe2\x48\x4e\xcb\x87\x71\xa8\xd8\x5c\x69\x7f\x7c\x6b\x9a\x0d\xe6\x4c\x9a\x21\x23\xf8\xbe\x52\x6d\xf3\x3f\x11\xa7\x48\x21\x13\xf8\x70\xae\xd8\x7c\x31\x11\x18\xdf\x2d\x81\xf2\x8e\xd1\xb8\x08\x7c\x21\x40\x6b\x17\xe8\x4c\x53\xe2\xe2\x3d\x32\x0d\x9f\x16\xaa\x92\x66\x7a\x70\x9e\x81\x6e\x26\x72\xfc\x95\x73\x68\x00\x00\x4e\xa7\x6a\x81\xaf\x5f\x8a\xc5\x68\xd8\x3c\x29\x19\x5d\x80\x5c\xb2\xb6\x7d\x4a\xde\x47\xc8\xb5\x3b\x1c\xa8\x78\xea\xc7\x33\x88\x32\x4c\x37\x86\xe4\xcc\xf7\x44\xaf\xd0\x68\x40\x63\x01\xb5\x0e\x14\x63\x71\x8b\x65\x7d\x3e\x0c\x39\x62\x8c\x93\x0f\xba\x78\xea\xc7\x33\x5a\xc1\x7a\x01\xb2\x74\xb8\xd5\xdd\x9f\x01\x44\x67\xa0\xd0\xc1\x3b\x81\x77\x24\x23\xcb\xfa\xb4\xd6\x4f\xc6\x9d\x3f\x83\xa3\xa9\x85\xaa\xb9\x16\x16\xc5\xb5\x50\xf5\x56\xd0\x66\xa8\xd5\xd9\x92\x74\xad\x03\x34\xf5\x98\x2c\x83\x48\xbb\x56\x75\x0e\x78\x45\xc6\x00\x29\xd8\x22\xda\x31\xf8\xde\x58\x82\xd1\x28\x4e\x41\xf8\xe6\x7b\x97\x63\xfe\xde\x68\xa1\x9d\xdb\x24\xc3\x17\x0a\xb0\xcb\x62\xd8\x81\x0f\xb0\xf3\xe1\xbc\x2b\x91\x25\x6c\xe3\xfc\xb6\x17\xeb\xea\x65\x3f\x16\x2e\x33\x50\x64\x1c\xc6\xfc\x98\xd3\x85\x9c\x2c\xc6\x2c\xe7\x09\xe3\xbc\x98\x32\xf1\xf9\xde\x21\x3f\x0d\xac\xa2\xf0\x8f\x35\xa3\x4a\x21\x50\xae\xa7\x06\x2d\xe4\x32\x28\x85\x6c\xbc\x03\xe5\x35\x01\xdd\x46\x52\x4c\x1a\xd8\x8b\xf7\x2e\x4b\x39\x17\x54\x12\x1f\xb3\xba\x92\x25\x67\x7b\xb9\xe8\x36\x9a\x20\x0c\xb9\x00\xf9\xaf\x5c\x68\xcd\x2d\x0d\x7a\x4d\xdd\x43\xca\xab\x06\xff\xe1\x0d\xab\x22\x1f\xea\x5f\xbf\xe2\x7f\x72\x58\x8c\x0c\x69\xd4\xcb\xb0\xe6\xfb\x87\x86\xd5\x36\xa2\xd3\x60\x06\x0c\x77\xf8\x46\xf7\x83\xd1\xc7\xe6\xf8\xd6\xfc\x0c\x00\x00\xff\xff\x51\xc4\x11\xc1\x15\x06\x00\x00"

func _0003_createAccountsTable_upSqlBytes() ([]byte, error) {
	return bindataRead(
		__0003_createAccountsTable_upSql,
		"0003_create-accounts-table_up.sql",
	)
}

func _0003_createAccountsTable_upSql() (*asset, error) {
	bytes, err := _0003_createAccountsTable_upSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "0003_create-accounts-table_up.sql", size: 1557, mode: os.FileMode(420), modTime: time.Unix(1462503451, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __0004_createScopesTable_downSql = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4a\x29\xca\x2f\x50\x28\x49\x4c\xca\x49\x55\xc8\x4c\x53\x48\xad\xc8\x2c\x2e\x29\x56\x28\x4e\xce\x2f\x48\x2d\xb6\x06\x04\x00\x00\xff\xff\x5f\xc6\xb7\xd6\x1c\x00\x00\x00"

func _0004_createScopesTable_downSqlBytes() ([]byte, error) {
	return bindataRead(
		__0004_createScopesTable_downSql,
		"0004_create-scopes-table_down.sql",
	)
}

func _0004_createScopesTable_downSql() (*asset, error) {
	bytes, err := _0004_createScopesTable_downSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "0004_create-scopes-table_down.sql", size: 28, mode: os.FileMode(420), modTime: time.Unix(1462503451, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __0004_createScopesTable_upSql = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x4f\x4b\x4e\xc4\x30\x0c\xdd\xe7\x14\x6f\xc7\x8c\x34\xe5\x02\x6c\xd9\x70\x8a\x91\x49\x5c\xd5\x22\x4d\xa2\xd8\xd5\xb4\x9c\x1e\x91\x96\x00\x02\x09\xb2\xf2\x53\xde\x77\x18\x60\x93\x28\x8c\x9e\x23\xc3\xe7\x64\x24\x49\x61\x13\x83\x62\x84\xfa\x5c\x58\x91\xc7\x9d\xa5\x9b\x1a\xcf\xf7\xce\x57\x26\xe3\x43\x24\x23\x52\x36\xf0\x2a\x6a\xfa\xa1\x38\x39\x00\x18\x86\x1d\xe3\xe9\xb1\x61\x09\xf8\xf1\xbc\x18\xaf\xd6\x2c\xd2\x12\xe3\xe5\x9b\xf0\x4e\x11\x58\x7d\x95\x62\x92\x53\xfb\xfa\x82\xbb\xc7\xef\x0e\x26\x33\xab\xd1\x5c\xde\xfb\xdf\x26\x4e\x6d\xd6\x5e\xe8\x46\x8a\x7d\x45\x68\xf4\xe3\xbe\x92\x7d\x36\xeb\x7a\x7b\xed\xe6\x08\x3c\xd2\x12\x0d\x7e\xa9\x95\x93\x5d\x3b\xe9\xdf\xb1\x91\xd4\xb0\x94\xd0\xb3\x8f\xfb\xcf\xec\x8b\x6b\xf4\x52\x65\xa6\xba\xe1\x85\xb7\x93\x84\xb3\x3b\x3f\xb8\xb7\x00\x00\x00\xff\xff\x57\x58\x91\x50\xc6\x01\x00\x00"

func _0004_createScopesTable_upSqlBytes() ([]byte, error) {
	return bindataRead(
		__0004_createScopesTable_upSql,
		"0004_create-scopes-table_up.sql",
	)
}

func _0004_createScopesTable_upSql() (*asset, error) {
	bytes, err := _0004_createScopesTable_upSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "0004_create-scopes-table_up.sql", size: 454, mode: os.FileMode(420), modTime: time.Unix(1462503451, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __0005_createClientsTable_downSql = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4a\x29\xca\x2f\x50\x28\x49\x4c\xca\x49\x55\xc8\x4c\x53\x48\xad\xc8\x2c\x2e\x29\x56\x48\xce\xc9\x4c\xcd\x2b\x29\xb6\x06\x04\x00\x00\xff\xff\xae\x13\x4f\x86\x1d\x00\x00\x00"

func _0005_createClientsTable_downSqlBytes() ([]byte, error) {
	return bindataRead(
		__0005_createClientsTable_downSql,
		"0005_create-clients-table_down.sql",
	)
}

func _0005_createClientsTable_downSql() (*asset, error) {
	bytes, err := _0005_createClientsTable_downSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "0005_create-clients-table_down.sql", size: 29, mode: os.FileMode(420), modTime: time.Unix(1462503451, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __0005_createClientsTable_upSql = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x92\x41\x6f\xdb\x30\x0c\x85\xef\xfe\x15\xbc\xb5\x05\x92\x1e\x76\xdd\x75\x97\xfd\x8a\x40\x95\x9e\x63\x62\xb2\x24\x90\xd4\x52\xf7\xd7\x0f\xb6\xec\xd4\x59\x0b\x24\x3e\x99\xf4\xe3\xf7\x68\xf0\x1d\x8f\x64\x03\x2b\x99\x7b\x8b\x20\x9f\x93\x39\x4e\x4a\x2e\x46\xca\xae\xda\xf0\x83\x7c\x64\x24\x23\x57\x4a\x64\xef\x8c\x73\x52\x12\x9c\x59\x0d\x82\x40\x9c\x1a\x40\x27\x35\x8c\xaf\x9d\x17\x38\xc3\xca\xe3\x9e\x52\x36\xc2\x3b\xab\xe9\x4a\x52\x7a\xee\x88\x88\x8e\xc7\x0d\xfd\xfb\xd7\xeb\xd2\xe1\x40\x5f\x9e\x5a\x39\x2c\x8c\x54\x63\x3c\x6c\x83\xce\xfb\x5c\x97\x49\xb2\x4c\x97\x81\xfd\x40\x36\x60\x03\xbe\x21\xe6\x74\x56\xb2\xdc\xc0\xab\xfc\xb4\x37\xb8\x01\x93\xa0\x87\x20\x79\xe8\x26\x56\x7a\xe6\xf0\x72\xb8\x5d\x55\x9f\x94\x14\x5e\x60\x07\x42\xf2\x32\x15\x43\x68\x1e\xad\x7d\xbb\xbc\xe1\xdd\xbe\x2e\xdf\x50\x4f\x4a\xc9\x8d\x68\xc3\xf3\xdb\xff\x7f\x7e\x67\x38\x40\xbd\x70\x99\xef\xd1\x18\xbb\xc6\xa3\x0c\x57\x0a\xc5\x7c\xce\x54\x25\x36\xc8\x5c\x9d\xaa\xc4\xfb\x8b\x0c\x79\x44\x71\x67\xcc\xb3\xd4\x67\x69\x29\x68\xe8\xc6\xda\x14\x7b\xde\xf7\x2c\x41\x60\x81\xb7\x85\xb5\x1c\x14\x82\xe5\xa0\x73\x04\xb3\xf0\xc7\x92\x3b\x52\xc8\x5f\xc8\x55\x3e\xe7\x50\x73\x15\x0f\xca\x97\x04\xd1\xe6\xbb\x7d\xde\xfb\x7a\xfe\xde\xd9\x78\x84\x9a\x1b\x0b\xe5\x7e\xb6\x4d\xfb\x18\x5d\x9c\x52\x8b\xf3\x7a\xe3\xb5\x38\xb9\xdd\x9d\xaf\x04\xfb\xf8\x8c\x53\x40\xef\x6a\x34\xf2\x55\x04\xc9\x4e\x57\xd1\xe3\xc6\xd1\xa9\x51\x2d\xe1\xd3\x7d\x2d\xee\xba\x1f\xba\x45\x5e\x84\x47\x27\x13\xfd\xc1\x34\x27\xb9\x7b\xf9\xd9\xfd\x0b\x00\x00\xff\xff\xa6\xc0\x78\x00\xed\x03\x00\x00"

func _0005_createClientsTable_upSqlBytes() ([]byte, error) {
	return bindataRead(
		__0005_createClientsTable_upSql,
		"0005_create-clients-table_up.sql",
	)
}

func _0005_createClientsTable_upSql() (*asset, error) {
	bytes, err := _0005_createClientsTable_upSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "0005_create-clients-table_up.sql", size: 1005, mode: os.FileMode(420), modTime: time.Unix(1462503451, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __0006_createGrantsTable_downSql = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4a\x29\xca\x2f\x50\x28\x49\x4c\xca\x49\x55\xc8\x4c\x53\x48\xad\xc8\x2c\x2e\x29\x56\x48\x2f\x4a\xcc\x2b\x89\x2f\x4e\xce\x2f\x48\x2d\xb6\xe6\xc2\xad\x04\x2e\x59\x59\x80\x45\x7b\x49\x62\x49\x69\x71\x3c\x48\xce\x9a\x0b\x10\x00\x00\xff\xff\x3f\x5e\x37\x2d\x67\x00\x00\x00"

func _0006_createGrantsTable_downSqlBytes() ([]byte, error) {
	return bindataRead(
		__0006_createGrantsTable_downSql,
		"0006_create-grants-table_down.sql",
	)
}

func _0006_createGrantsTable_downSql() (*asset, error) {
	bytes, err := _0006_createGrantsTable_downSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "0006_create-grants-table_down.sql", size: 103, mode: os.FileMode(420), modTime: time.Unix(1462503451, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __0006_createGrantsTable_upSql = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x54\xcd\x8e\xe3\x2c\x10\x3c\x9b\xa7\xa8\x5b\x32\x92\x9d\xc3\x77\xfc\xf6\xba\xd2\x6a\xb5\x0f\x61\x11\xdc\x8e\xd1\x10\xb0\xe8\x66\x3c\x99\xa7\x5f\x01\x8e\x67\x26\x3b\x3f\xe1\x90\x10\x48\x75\x75\x75\x17\xdd\x75\x30\x91\xb4\x10\x43\x7b\x90\x4f\x67\xc8\x65\x26\x8c\x21\x82\x45\x4b\x62\x55\xef\xeb\xf1\x29\x6a\x2f\x7d\xbd\xe8\xcb\x89\xe6\x8a\xda\xef\x3c\x2d\xbb\x16\xbb\xc4\x34\xe4\x6f\x7a\x9e\x6d\xac\xdb\x48\x4f\xe1\x91\x86\xdd\xc3\x0f\xa5\xba\x0e\x32\x59\x86\xe8\xa3\x23\x98\xe0\x45\x5b\xcf\xd0\xce\x21\xe8\x24\xd3\x7f\x95\x03\x79\x1f\xa2\x7d\xd1\x62\x83\x87\x09\x03\x31\x4e\xe4\x29\x6a\xa1\xa1\xa4\xa7\x61\x9c\x25\x2f\x39\x64\x9a\x83\x47\x24\x0e\x29\x1a\x42\x58\x3c\x45\x70\x32\x86\x98\xc7\xe4\xa0\xe7\x39\x86\x27\xed\x20\x21\x53\x72\x3a\x13\x26\x8a\x1b\x82\x0f\x9b\xca\x92\x96\x1d\xe1\x83\x80\x9e\x2d\x0b\xd7\x84\x18\x7b\xd5\x74\x1d\x7e\x95\xec\x72\x3e\xaa\xc9\x9f\xb8\x59\x29\xd9\xa1\x80\x7d\x72\xae\x2d\x10\x6d\x4c\x48\x5e\xf0\xfb\x67\xe6\x5f\x26\x6b\x26\xc8\x44\x6b\xfa\x38\x92\x0b\xfe\xc4\x90\x70\x50\x4d\x3d\xeb\xed\xf0\x59\x48\x44\x1a\x29\x92\x37\xc4\x6b\x00\xc6\xde\x0e\x0f\xad\x6a\xd0\x75\x28\x55\xaf\x35\x13\x7b\xae\x7d\xcc\x5c\xef\xcb\x79\xda\x44\x1c\x54\x53\x1b\xc5\xbd\xf5\xaf\x94\x19\xcb\xa2\xcf\xb3\xbc\xdc\x88\xa9\xbd\x87\xd1\x1e\x47\x42\xf0\x84\x30\x16\x86\x31\x38\x17\x16\xeb\x4f\xff\xc3\xd3\xd2\x22\xfb\xa0\xc5\xea\x82\x16\xab\x07\x0e\xaa\x59\x23\xbc\x5b\xff\xfa\x6a\xd3\x3b\xd0\xa8\x93\x13\x54\x7f\x95\x1c\x22\x0d\x36\x92\x11\xa4\xe8\x8a\xc2\xd7\x9a\x7e\xa4\x73\xd1\xbc\x9a\x3c\xd3\x5f\xc1\x7d\x06\xaf\xcb\x58\xa1\x67\xb9\x51\xba\xd5\x20\x2b\x5c\x26\xf2\x85\xe0\xa3\x90\xeb\xae\xd7\xf2\x75\x05\x37\x2d\x26\xc5\x98\xdb\xbc\xfd\xe9\x3e\xc6\x5c\x52\x1c\x2f\x6f\xcc\x73\x50\x4d\x3e\x7c\xc7\xfc\x65\xfb\xbe\xa3\x58\xfb\xb5\xd9\xe2\x7b\x51\xf7\xc5\x7d\x6d\xff\xba\xbb\x23\xae\x6a\xe6\x68\xcf\x3a\x5e\xf0\x48\x17\xec\xb3\x5d\x1f\xd4\x3a\x43\xfe\x10\xcd\x5c\x38\x9c\x65\xc9\xa4\x6c\xc2\x9c\xa7\x18\x73\x30\xb6\x0c\x09\x09\x79\xa6\x7d\xee\xfc\xef\x9e\x7c\xbf\x86\xdc\xab\xa6\xfe\x5e\xdf\xfb\xa7\xef\xf1\x3a\x28\x4a\xa6\xad\x6a\x0a\xfe\xfa\x96\x6f\x3c\xf6\x16\x77\xe5\xb1\x43\xd1\xf7\x37\x00\x00\xff\xff\xfb\xea\x62\x48\x94\x05\x00\x00"

func _0006_createGrantsTable_upSqlBytes() ([]byte, error) {
	return bindataRead(
		__0006_createGrantsTable_upSql,
		"0006_create-grants-table_up.sql",
	)
}

func _0006_createGrantsTable_upSql() (*asset, error) {
	bytes, err := _0006_createGrantsTable_upSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "0006_create-grants-table_up.sql", size: 1428, mode: os.FileMode(420), modTime: time.Unix(1462503451, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __0007_createTokensTable_downSql = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x4a\x29\xca\x2f\x50\x28\x49\x4c\xca\x49\x55\xc8\x4c\x53\x48\xad\xc8\x2c\x2e\x29\x56\x28\xc9\xcf\x4e\xcd\x2b\xb6\xe6\x82\x48\x56\x16\x60\xc8\xc5\x17\x97\x24\x96\x94\x16\xc7\x83\xe4\xb0\x2b\xcb\x4f\x2c\x2d\xc9\x88\x87\x28\x86\xa8\x02\x04\x00\x00\xff\xff\x9e\x2e\x75\xdb\x6a\x00\x00\x00"

func _0007_createTokensTable_downSqlBytes() ([]byte, error) {
	return bindataRead(
		__0007_createTokensTable_downSql,
		"0007_create-tokens-table_down.sql",
	)
}

func _0007_createTokensTable_downSql() (*asset, error) {
	bytes, err := _0007_createTokensTable_downSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "0007_create-tokens-table_down.sql", size: 106, mode: os.FileMode(420), modTime: time.Unix(1462503451, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __0007_createTokensTable_upSql = "\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x8c\x94\xbf\x8e\xdb\x48\x0c\xc6\x6b\xe9\x29\x88\x6d\x6c\x03\xb2\x8b\x2b\x6f\xab\x03\x2e\x48\x52\xa5\xd9\xde\xa0\x47\xb4\x35\xf0\x98\x23\x0c\x39\xd6\x3a\x4f\x1f\xcc\x1f\x6b\xd7\x76\x92\x5d\x55\x82\x44\xf2\x47\xf2\xfb\x66\xd6\x6b\x30\x81\x50\x49\x00\x19\x88\xe3\x09\xf4\x32\x12\xec\x7d\x00\xf5\x47\x62\x10\x45\x8d\x42\xd2\x96\xb8\xf2\x3b\xff\xda\x96\x5f\xdb\xfc\x05\xa5\x64\x2f\x17\x4c\xd3\xa2\x83\x05\xbd\x8e\x36\x50\x9f\x5e\x03\x9d\xfd\x91\xfa\xc5\xea\xb9\x6d\xff\x06\xfc\xf1\x5f\xd4\xe1\x9f\xca\x4d\x5f\x6f\xa1\x1e\xa3\x0e\xdb\x82\xbe\x63\xa2\x31\x24\x52\x58\xfb\x40\x32\x5c\x59\x3a\x58\x01\xc5\x9d\x23\x30\x9e\x15\x2d\x0b\xa0\x73\xa5\x56\x45\x09\x1c\x88\x29\xa0\x52\x9f\xdb\x40\x30\xce\x12\x2b\x20\xf7\xa9\xc6\x21\x20\x2b\x18\xdf\x53\x07\x71\xf4\x0c\x81\xc4\xc7\x60\x08\xfc\xc4\x14\x00\xc7\x31\xf8\x33\x3a\x50\x9f\x20\x12\x4f\x04\x03\x85\x39\x4c\x60\xb2\x3a\x00\xc2\xc1\x9e\x89\xe7\x8a\x0b\x01\x31\x7e\xa4\xcd\x3c\x64\x6e\xd3\xee\x81\xbd\x02\xbd\x5a\x51\xb9\x36\xb8\x6c\x9b\xf5\x1a\x5e\xf2\x62\xce\xe8\x22\x6d\xda\xa6\xac\xe9\xf6\x89\xd1\xf6\x39\x9d\xa3\x73\xdd\xbb\xa4\xb4\xaf\x2e\x4f\xc7\x7e\x02\xcf\xee\x02\x4f\x3b\xc2\x40\xe1\xa9\x56\x2a\x2b\x9d\x1f\x63\x95\x5e\xf5\xae\xd6\x83\x40\x1d\x90\xd5\x34\x6b\x11\x00\x7c\x9a\x3a\x0b\x50\x82\x36\x6d\x53\x55\xbb\x29\xfe\xa0\xe4\x15\x03\x3d\xed\x31\x3a\x85\x59\xd1\xcc\xad\x7a\x7c\xff\x3f\xad\x78\x1a\xac\x19\xaa\xb0\xb9\x11\x2b\xb0\x23\xcb\x87\x37\x19\x37\x6d\x53\x52\xb6\xb6\xff\xd3\x76\x52\xa3\x14\x88\x93\x3e\x25\x58\x60\x69\xfb\x55\x21\x7e\xcd\x9a\x47\xa1\x3e\xab\x5a\x05\x1a\xaa\xf3\xcb\xf1\x18\x08\xf6\x36\x88\x82\xda\x53\x12\x24\xab\xba\x4d\x3e\xf9\x04\x32\x07\x0b\x2c\x53\x78\x65\x7e\x39\xed\xa8\xef\x33\x31\x1f\xbc\x6c\x0e\x78\xb9\xc1\x80\x55\x98\xac\x73\xb0\x2b\xed\x08\x9e\xe8\xde\x4e\xa9\xd6\x37\x3f\xd1\x99\x42\x97\xe2\x8d\x8f\xae\x87\x03\x29\xc8\x10\x2c\x1f\x61\x77\xc9\xb9\x75\xab\xd9\xd2\x74\x26\xd6\x98\x3d\x9c\xd8\x55\x44\x92\xd2\xd9\x2e\x2a\x18\x0a\xe9\xf8\xb8\x4b\xb5\xe7\x88\x9c\x7a\x45\xbe\xc0\x3e\x86\x64\x82\x4d\xdb\xe4\x0e\xee\x3c\xf9\x5b\x27\x95\xab\x03\x0c\x72\x9a\xc4\x33\x81\xdf\x97\x8d\x7a\xe7\xfc\x64\xf9\xf0\x2f\x30\x4d\x1d\xd4\x6b\xa4\x83\x7a\x89\x24\x48\xc9\xbd\x79\x1e\x2f\xa4\x47\x4b\xe5\x8b\x29\xd3\xd3\x26\x45\xf1\x34\x26\xea\x34\x24\x33\xcf\xd2\x4e\x28\x55\xef\x6c\xa3\xf2\xb6\x45\x7d\xc7\xba\x66\xeb\xcf\x47\x8a\x89\x21\x24\xe3\xcd\x41\x9f\x23\xbe\x4d\x57\xdf\x3e\x24\x76\x6d\x03\xeb\x75\xd9\x0f\xaa\xf5\x5c\xfc\x51\x9c\x79\x3d\x1b\x9b\xb6\x29\x0b\x94\xad\xe5\x8f\xea\xb5\xcd\x18\xec\x09\xc3\x05\x8e\x74\x81\x65\x2e\xb0\x6a\x57\xcf\xed\xaf\x00\x00\x00\xff\xff\xc0\xbc\xe5\xa9\x25\x06\x00\x00"

func _0007_createTokensTable_upSqlBytes() ([]byte, error) {
	return bindataRead(
		__0007_createTokensTable_upSql,
		"0007_create-tokens-table_up.sql",
	)
}

func _0007_createTokensTable_upSql() (*asset, error) {
	bytes, err := _0007_createTokensTable_upSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "0007_create-tokens-table_up.sql", size: 1573, mode: os.FileMode(420), modTime: time.Unix(1462503451, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"0001_create-index-function-if-not-exists_down.sql": _0001_createIndexFunctionIfNotExists_downSql,
	"0001_create-index-function-if-not-exists_up.sql": _0001_createIndexFunctionIfNotExists_upSql,
	"0002_create-extension-citext_down.sql": _0002_createExtensionCitext_downSql,
	"0002_create-extension-citext_up.sql": _0002_createExtensionCitext_upSql,
	"0003_create-accounts-table_down.sql": _0003_createAccountsTable_downSql,
	"0003_create-accounts-table_up.sql": _0003_createAccountsTable_upSql,
	"0004_create-scopes-table_down.sql": _0004_createScopesTable_downSql,
	"0004_create-scopes-table_up.sql": _0004_createScopesTable_upSql,
	"0005_create-clients-table_down.sql": _0005_createClientsTable_downSql,
	"0005_create-clients-table_up.sql": _0005_createClientsTable_upSql,
	"0006_create-grants-table_down.sql": _0006_createGrantsTable_downSql,
	"0006_create-grants-table_up.sql": _0006_createGrantsTable_upSql,
	"0007_create-tokens-table_down.sql": _0007_createTokensTable_downSql,
	"0007_create-tokens-table_up.sql": _0007_createTokensTable_upSql,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"0001_create-index-function-if-not-exists_down.sql": &bintree{_0001_createIndexFunctionIfNotExists_downSql, map[string]*bintree{}},
	"0001_create-index-function-if-not-exists_up.sql": &bintree{_0001_createIndexFunctionIfNotExists_upSql, map[string]*bintree{}},
	"0002_create-extension-citext_down.sql": &bintree{_0002_createExtensionCitext_downSql, map[string]*bintree{}},
	"0002_create-extension-citext_up.sql": &bintree{_0002_createExtensionCitext_upSql, map[string]*bintree{}},
	"0003_create-accounts-table_down.sql": &bintree{_0003_createAccountsTable_downSql, map[string]*bintree{}},
	"0003_create-accounts-table_up.sql": &bintree{_0003_createAccountsTable_upSql, map[string]*bintree{}},
	"0004_create-scopes-table_down.sql": &bintree{_0004_createScopesTable_downSql, map[string]*bintree{}},
	"0004_create-scopes-table_up.sql": &bintree{_0004_createScopesTable_upSql, map[string]*bintree{}},
	"0005_create-clients-table_down.sql": &bintree{_0005_createClientsTable_downSql, map[string]*bintree{}},
	"0005_create-clients-table_up.sql": &bintree{_0005_createClientsTable_upSql, map[string]*bintree{}},
	"0006_create-grants-table_down.sql": &bintree{_0006_createGrantsTable_downSql, map[string]*bintree{}},
	"0006_create-grants-table_up.sql": &bintree{_0006_createGrantsTable_upSql, map[string]*bintree{}},
	"0007_create-tokens-table_down.sql": &bintree{_0007_createTokensTable_downSql, map[string]*bintree{}},
	"0007_create-tokens-table_up.sql": &bintree{_0007_createTokensTable_upSql, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

